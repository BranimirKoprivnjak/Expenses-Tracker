{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","setTitle","setAmount","setDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a276c3e2.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = props => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = props => {\r\n  const dropdownChangeHandler = event => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = props => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = props => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = props => {\r\n  if (props.items.length === 0)\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map(expense => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0)\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map(dataPoint => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n// {props.items.reduce((prev, curr) => {\r\n//   if (curr.date.getFullYear().toString() === filteredYear)\r\n//     prev.push(\r\n//       <ExpenseItem\r\n//         key={curr.id}\r\n//         title={curr.title}\r\n//         amount={curr.amount}\r\n//         date={curr.date}\r\n//       />\r\n//     );\r\n//   return prev;\r\n// }, [])}\r\n","import { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = props => {\r\n  const [title, setTitle] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  const titleChangeHandler = event => {\r\n    setTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = event => {\r\n    setAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = event => {\r\n    setDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: title,\r\n      amount: +amount,\r\n      date: new Date(date),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setTitle('');\r\n    setAmount('');\r\n    setDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={title} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={amount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            step=\"2022-12-31\"\r\n            value={date}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = props => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const saveExpenseDataHandler = enteredExpenseData => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpense => {\n      return [expense, ...prevExpense];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n\n// Alternative to jsx, explains why jsx expression can only have one parent element\n// return React.createElement(\n//   'div',\n//   {},\n//   React.createElement(Expenses, { items: expenses })\n// );\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}